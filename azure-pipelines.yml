# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- development

pool:
  vmImage: 'ubuntu-latest'
  strategy:
    parallel: 4

stages:
- stage: Environment Setup
  jobs:
  - job: CreateCacheDirectoriesIfNotPresent
    steps:

    - script: |
        mkdir -p $(Pipeline.Workspace)/.cache/Cypress
      displayName: 'Check Cypress Cache Path'

    - script: |
        mkdir -p $(Pipeline.Workspace)/.npm
      displayName: 'Check NPM Cache Path'

  - job: InstallNode
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'
  
  - job: CheckForCacheHits
    steps:

    - task: Cache@2
      inputs:
        key: npm | $(Agent.OS) | package-lock.json
        path: $(Pipeline.Workspace)/.npm
        restoreKeys: npm | $(Agent.OS) | package-lock.json
      displayName: Cache NPM packages

    - task: Cache@2
      inputs:
        key: cypress | $(Agent.OS) | package-lock.json
        path: $(Pipeline.Workspace)/.cache/Cypress
        restoreKeys: cypress | $(Agent.OS) | package-lock.json
      displayName: Cache Cypress binary

  - job: PingAzureFunction
    steps:

    - task: AzureFunction@1
      inputs:
        function: 'https://resumejs.azurewebsites.net/api/save'
        key: '$(REACT_APP_SAVE_KEY)'
        method: 'POST'
        headers: 
        body: |
          {
          "jsId": "$(system.JobId)", 
          "content": "Invocation from Azure Pipeline"
          }
        waitForCompletion: 'false'
      displayName: "Invoke Azure Function"

  - job: InstallPackages
    steps:

    - script: |
        npm ci
      displayName: 'Install Packages'

- stage: RunTests
  jobs:
  - job: RunJestTests
    steps:
    - script: |
        REACT_APP_API_URL=$(REACT_APP_API_URL) REACT_APP_FILE_KEY=$(REACT_APP_FILE_KEY) REACT_APP_SAVE_KEY=$(REACT_APP_SAVE_KEY) npm run test:ci
      displayName: 'Run Tests'
      env:
        REACT_APP_API_URL: $(REACT_APP_API_URL)
        REACT_APP_FILE_KEY: $(REACT_APP_FILE_KEY)
        REACT_APP_SAVE_KEY: $(REACT_APP_SAVE_KEY)

  - job: RunCypressTests
    steps:
    - script: |
        npx start-server-and-test 'REACT_APP_API_URL=$(REACT_APP_API_URL) REACT_APP_FILE_KEY=$(REACT_APP_FILE_KEY) REACT_APP_SAVE_KEY=$(REACT_APP_SAVE_KEY) npm start' 3000 'CI=true cypress run'
      displayName: 'Run Cypress Tests'
      env:
        REACT_APP_API_URL: $(REACT_APP_API_URL)
        REACT_APP_FILE_KEY: $(REACT_APP_FILE_KEY)
        REACT_APP_SAVE_KEY: $(REACT_APP_SAVE_KEY)

- stage: CleanUp
  jobs:
  - job:
    steps:
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'test-reports/test-*.xml'
        failTaskOnFailedTests: true
        testRunTitle: 'Publish Test Results'
      displayName: 'Publish Test Results'
